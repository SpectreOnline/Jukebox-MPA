@model Jukebox.Playlists
@using Jukebox.Utilities;
@{
ViewBag.Title = "Create";

string convertingQueue = "";

string songsInQueue = "";


    if (JukeboxHelper.Session.ConvertingQueue != null)
    {
        convertingQueue = JukeboxHelper.Session.ConvertingQueue.ToString();

        foreach (var songString in (List<string>)JukeboxHelper.Session.Queue.SongList.Split(',').ToList())
        {

            if (string.IsNullOrWhiteSpace(songsInQueue))
            {
                songsInQueue = songString;
            }
            else
            {
                songsInQueue = songsInQueue + ',' + songString;
            }
        }
    }
}



<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Playlist</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Creator, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Creator, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Creator, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (convertingQueue == "true")
    {
        <div class="form-group hidden" hidden>
            @Html.LabelFor(model => model.SongList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="SongList" name="SongList" type="text" value="@songsInQueue">
                @Html.ValidationMessageFor(model => model.SongList, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
