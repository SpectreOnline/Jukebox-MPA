@model Jukebox.Models.MultipleModels
@using Jukebox.Utilities

@{
    ViewBag.Title = "Details";
    string URLValue = ViewContext.RouteData.Values["id"].ToString();
    int id = Int32.Parse(URLValue);
}

<h2>Details</h2>

<div>
    <h4>Playlist</h4>
    <hr />
    @{ if (Model.Playlists != null)
       {
            foreach (var item in Model.Playlists.Where(i => i.ID == id))
            {
            <dl class="dl-horizontal">

                <dt>
                    @Html.DisplayNameFor(modelItem => item.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(modelItem => item.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(modelItem => item.Creator)
                </dt>

                <dd>
                    @Html.DisplayFor(modelItem => item.Creator)
                </dd>

            </dl>                  
                List<int> songIDs = new List<int>();
                if (item.SongList != null)
                {
                    songIDs = JukeboxHelper.SplitList(item.SongList);
                }
            <table class="table">
            
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Songs.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Songs.First().Author)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Songs.First().Genre)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Songs.First().DurationMinutes)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Songs.First().DurationSeconds)
                    </th>
                    <th></th>
                </tr>
                @if (item.SongList != null) {
                foreach (int songid in songIDs)
                    {
                        foreach (Song song in Model.Songs.Where(i => i.ID == songid))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => song.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => song.Author)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => song.Genre)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => song.DurationMinutes)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => song.DurationSeconds)
                                </td>
                                <td>
                                    <a href="~/Songs/RemoveFromPlaylist?currentPlaylistID=@id&currentSongID=@songid">Remove from this playlist</a> |
                                    <a href="~/Songs/Playlist/@(song.ID)">Add to different playlist</a> |
                                    <a href="~/Songs/AddToQueue?SongID=@song.ID&currentURL=@HttpContext.Current.Request.Url.AbsolutePath.TrimStart('/')">Add to queue</a>
                                </td>
                            </tr>
                        }

                    }
                }
              
            </table>

            }
        }
    }
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
